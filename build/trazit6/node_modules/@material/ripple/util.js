define(["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.supportsCssVariables=supportsCssVariables;_exports.applyPassive=applyPassive;_exports.getMatchesProperty=getMatchesProperty;_exports.getNormalizedEventCoords=getNormalizedEventCoords;/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */ /**
 * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
 * @private {boolean|undefined}
 */let supportsCssVariables_,supportsPassive_;/**
 * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
 * @private {boolean|undefined}
 */ /**
 * @param {!Window} windowObj
 * @return {boolean}
 */function detectEdgePseudoVarBug(windowObj){// Detect versions of Edge with buggy var() support
// See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
const document=windowObj.document,node=document.createElement("div");node.className="mdc-ripple-surface--test-edge-var-bug";document.body.appendChild(node);// The bug exists if ::before style ends up propagating to the parent element.
// Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
// but Firefox is known to support CSS custom properties correctly.
// See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397
const computedStyle=windowObj.getComputedStyle(node),hasPseudoVarBug=null!==computedStyle&&"solid"===computedStyle.borderTopStyle;node.remove();return hasPseudoVarBug}/**
 * @param {!Window} windowObj
 * @param {boolean=} forceRefresh
 * @return {boolean|undefined}
 */function supportsCssVariables(windowObj,forceRefresh=!1){let supportsCssVariables=supportsCssVariables_;if("boolean"===typeof supportsCssVariables_&&!forceRefresh){return supportsCssVariables}const supportsFunctionPresent=windowObj.CSS&&"function"===typeof windowObj.CSS.supports;if(!supportsFunctionPresent){return}const explicitlySupportsCssVars=windowObj.CSS.supports("--css-vars","yes"),weAreFeatureDetectingSafari10plus=windowObj.CSS.supports("(--css-vars: yes)")&&windowObj.CSS.supports("color","#00000000");// See: https://bugs.webkit.org/show_bug.cgi?id=154669
// See: README section on Safari
if(explicitlySupportsCssVars||weAreFeatureDetectingSafari10plus){supportsCssVariables=!detectEdgePseudoVarBug(windowObj)}else{supportsCssVariables=!1}if(!forceRefresh){supportsCssVariables_=supportsCssVariables}return supportsCssVariables}//
/**
 * Determine whether the current browser supports passive event listeners, and if so, use them.
 * @param {!Window=} globalObj
 * @param {boolean=} forceRefresh
 * @return {boolean|!EventListenerOptions}
 */function applyPassive(globalObj=window,forceRefresh=!1){if(supportsPassive_===void 0||forceRefresh){let isSupported=!1;try{globalObj.document.addEventListener("test",null,{get passive(){isSupported=!0;return isSupported}})}catch(e){}supportsPassive_=isSupported}return supportsPassive_?/** @type {!EventListenerOptions} */{passive:!0}:!1}/**
 * @param {!Object} HTMLElementPrototype
 * @return {string}
 */function getMatchesProperty(HTMLElementPrototype){/**
   * Order is important because we return the first existing method we find.
   * Do not change the order of the items in the below array.
   */const matchesMethods=["matches","webkitMatchesSelector","msMatchesSelector"];let method="matches";for(let i=0;i<matchesMethods.length;i++){const matchesMethod=matchesMethods[i];if(matchesMethod in HTMLElementPrototype){method=matchesMethod;break}}return method}/**
 * @param {!Event} ev
 * @param {{x: number, y: number}} pageOffset
 * @param {!ClientRect} clientRect
 * @return {{x: number, y: number}}
 */function getNormalizedEventCoords(ev,pageOffset,clientRect){const{x,y}=pageOffset,documentX=x+clientRect.left,documentY=y+clientRect.top;let normalizedX,normalizedY;// Determine touch point relative to the ripple container.
if("touchstart"===ev.type){ev=/** @type {!TouchEvent} */ev;normalizedX=ev.changedTouches[0].pageX-documentX;normalizedY=ev.changedTouches[0].pageY-documentY}else{ev=/** @type {!MouseEvent} */ev;normalizedX=ev.pageX-documentX;normalizedY=ev.pageY-documentY}return{x:normalizedX,y:normalizedY}}});